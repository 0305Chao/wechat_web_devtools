'use strict';!function(require,directRequire){const a=require('fs'),b=require('path'),c=require('source-map');module.exports=(c,d,e)=>{let f;try{d||(d=a.readFileSync(c,'utf-8'));const e=/\/\/[#|@] sourceMappingURL=[\s]*(\S*)[\s]*$/.exec(d),g=b.dirname(c),h=b.basename(c);if(!(e&&e[1])){const c=b.join(g,`${h}.map`);a.existsSync(c)&&(f=a.readFileSync(c,'utf-8'),f=JSON.parse(f))}else if(/\.js\.map$/.test(e[1]))f=a.readFileSync(b.join(g,e[1]),'utf-8'),f=JSON.parse(f);else{const a=e[1].split('base64,')[1];f=Buffer.from(a,'base64').toString(),f=JSON.parse(f)}}catch(a){f=void 0}if(e&&e.inlineSources&&'object'==typeof f&&Array.isArray(f.sources)&&!Array.isArray(f.sourcesContent)){const d=f.sourcesContent;try{const d=b.dirname(c),e=[],g=f.sources;for(const c of g){const f=a.readFileSync(b.join(d,c),'utf-8');e.push(f)}f.sourcesContent=e}catch(a){f.sourcesContent=d,console.warn('get sourcesContent fail')}}return f}}(require('lazyload'),require);